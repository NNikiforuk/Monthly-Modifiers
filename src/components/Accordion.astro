---
import "./accordion.scss";

interface Props {
	homepage: boolean,
	FAQ?: {
        title: string;
        answer: string;
    }[]
}

const { homepage,FAQ } = Astro.props;
---

<section class={`accordion ${FAQ && FAQ.length > 1 && "accordionExtended"}`}>
	{homepage ? (
		<div class="section">
	<button class="header">
		<h2>FAQ</h2>
		<span class="icon">+</span>
	</button>
	<div class="content">
		<div class="item">
			<i>ϟ</i>
			<p>This site provides challenges to motivate you to improve yourself</p>
		</div>
		<div class="item">
			<i>ϟ</i>
			<p>Every month we draw a challenge using the NIST Randomness Beacon</p>
			</div>
		<div class="item">
			<i>ϟ</i>
			<p>Show off your current challenge on your socials</p>
		</div>
	</div>
	</div>
	) : FAQ && FAQ!.map((item: { title: string; answer: string; }) => (
		<div class="section">
			<button class="header headerChallenge">
				<h2>{item.title}</h2>
				<span class="icon">+</span>
			</button>
			<div class="content">
				<div class="item">
					<p>{item.answer}</p>
				</div>
			</div>
		</div>
	)
	)}
</section>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const accordion = document.querySelector(".accordion");
		const sections = accordion?.querySelectorAll(".section");

		sections?.forEach(section => {
			const header = section.querySelector(".header");

			header?.addEventListener("click", () => {
				sections.forEach(el => {
					if (el !== section ) {
						el.classList.remove("active");
					}
				})
				section.classList.toggle("active");
			})
		})
	});
</script>
